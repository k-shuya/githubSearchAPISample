// swiftlint:disable line_length
// swiftlint:disable variable_name



{% for type in types.protocols where type.based.AutoRoutable or type|annotated:"AutoRoutable" %}{% if type.name != "AutoRoutable" %}

// sourcery:file:{{ type.name }}Router.swift

import UIKit

protocol {{ type.name }}Wireframe {
    // 実装すべきメソッド
}

final class {{ type.name }}Router {
    private unowned let viewController: UIViewController
    
    private init(viewController: UIViewController) {
        self.viewController = viewController
    }
    
    static func assembleModules() -> UIViewController {
        let view = UIStoryboard.__name__.instantiateInitialViewController() as! {{ type.name }}VC
        let interactor = {{ type.name }}Interactor()
        let router = {{ type.name }}Router(viewController: view)
        let presenter = {{ type.name }}Presenter(view: view, interactor: interactor, router: router)
        // viewとpresenterは互いが互いを知っている
        view.inject(presenter: presenter)
        return view
    }
}

extension {{ type.name }}Router: {{ type.name }}Wireframe { : BaseRouter {
    func navigate(to destination: {{ type.name }}RouterNavigationDestination) {
        // switchで遷移先を振り分けていく
    }
}

// sourcery:end
{% endif %}{% endfor %}
